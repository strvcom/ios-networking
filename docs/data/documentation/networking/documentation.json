{"hierarchy":{"paths":[["doc:\/\/Networking\/documentation\/Networking"]]},"primaryContentSections":[{"content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"#overview","isActive":true}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"#making-requests","isActive":true}]}]},{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"#downloading-files"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"isActive":true,"identifier":"#uploading-files","type":"reference"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"#retry-ability","type":"reference","isActive":true}]}]},{"content":[{"inlineContent":[{"identifier":"#modifiers","type":"reference","isActive":true}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"#request-authorization"}]}]},{"content":[{"inlineContent":[{"identifier":"#associated-array-query-parameters","isActive":true,"type":"reference"}],"type":"paragraph"}]}],"type":"unorderedList"},{"text":"Overview","level":2,"anchor":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"Heavily inspired by Moya, the networking layerâ€™s philosophy is focused on creating individual endpoint routers, transforming them into a valid URLRequest objects and applying optional adapters and processors in the network call pipeline utilising native "},{"type":"codeVoice","code":"URLSession"},{"type":"text","text":" under the hood."}],"type":"paragraph"},{"level":2,"anchor":"Making-requests","text":"Making requests","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"There is no 1 line way of making a request from scratch in order to ensure consistency and better structure. First we need to define a Router by conforming to "},{"identifier":"doc:\/\/Networking\/documentation\/Networking\/Requestable","isActive":true,"type":"reference"},{"type":"text","text":" protocol. Which in the simplest form can look like this:"}]},{"code":["enum UserRouter: Requestable {","    case getUser","    ","    var baseURL: URL { ","        URL(string: \"https:\/\/reqres.in\/api\")!","    }","","    var path: String { ","        switch self {","        case .getUser: \"\/user\"","        }","    }","","    var method: HTTPMethod { ","        switch self {","        case .getUser: .get","        }","    }","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Then we can make a request on an "},{"identifier":"doc:\/\/Networking\/documentation\/Networking\/APIManager","isActive":true,"type":"reference"},{"text":" instance, which is responsible for handling the whole request flow.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["let response = try await APIManager().request(UserRouter.getUser)"]},{"type":"paragraph","inlineContent":[{"text":"If you specify object type, the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Networking\/documentation\/Networking\/APIManager"},{"type":"text","text":" will automatically perform the decoding (given the received JSON correctly maps to the decodable). You can also specify a custom json decoder."}]},{"type":"codeListing","syntax":"swift","code":["let userResponse: UserResponse = try await apiManager.request(UserRouter.getUser)"]},{"anchor":"Downloading-files","text":"Downloading files","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Downloads are being handled by a designated "},{"type":"reference","identifier":"doc:\/\/Networking\/documentation\/Networking\/DownloadAPIManager","isActive":true},{"type":"text","text":". Here is an example of a basic form of file download from a "},{"code":"URL","type":"codeVoice"},{"text":". It returns a tuple of ","type":"text"},{"code":"URLSessionDownloadTask","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Networking\/documentation\/Networking\/Response"},{"text":" (result for the HTTP handshake).","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["let (task, response) = try await DownloadAPIManager().request(url: URL)"]},{"inlineContent":[{"text":"You can then observe the download progress for a given ","type":"text"},{"type":"codeVoice","code":"URLSessionDownloadTask"}],"type":"paragraph"},{"code":["for try await downloadState in downloadAPIManager.shared.progressStream(for: task) {","    ...","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"In case you need to provide some specific info in the request, you can define a type conforming to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Networking\/documentation\/Networking\/Requestable"},{"text":" protocol and pass that to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Networking\/documentation\/Networking\/DownloadAPIManager"},{"type":"text","text":" instead of the "},{"type":"codeVoice","code":"URL"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"heading","level":2,"text":"Uploading files","anchor":"Uploading-files"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Uploads are being handled by a designated "},{"identifier":"doc:\/\/Networking\/documentation\/Networking\/UploadAPIManager","type":"reference","isActive":true},{"type":"text","text":". Here is an example of a basic form of file upload to a "},{"type":"codeVoice","code":"URL"},{"text":". It returns an ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Networking\/documentation\/Networking\/UploadTask"},{"type":"text","text":" which is a struct that represents + manages a "},{"code":"URLSessionUploadTask","type":"codeVoice"},{"type":"text","text":" and provides its state."}]},{"code":["let uploadTask = try await uploadManager.upload(.file(fileUrl), to: \"https:\/\/upload.com\/file\")"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"You can then observe the upload progress for a given ","type":"text"},{"type":"reference","identifier":"doc:\/\/Networking\/documentation\/Networking\/UploadTask","isActive":true}]},{"type":"codeListing","syntax":"swift","code":["for await uploadState in await uploadManager.stateStream(for: task.id) {","...","}"]},{"inlineContent":[{"type":"text","text":"In case you need to provide some specific info in the request, you can define a type conforming to "},{"identifier":"doc:\/\/Networking\/documentation\/Networking\/Requestable","type":"reference","isActive":true},{"type":"text","text":" protocol and pass that to the "},{"isActive":true,"identifier":"doc:\/\/Networking\/documentation\/Networking\/UploadAPIManager","type":"reference"},{"text":" instead of the upload ","type":"text"},{"code":"URL","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"level":2,"type":"heading","text":"Retry-ability","anchor":"Retry-ability"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Both "},{"identifier":"doc:\/\/Networking\/documentation\/Networking\/APIManager","isActive":true,"type":"reference"},{"text":" and ","type":"text"},{"identifier":"doc:\/\/Networking\/documentation\/Networking\/DownloadAPIManager","type":"reference","isActive":true},{"type":"text","text":" allow for configurable retry mechanism. You can provide a custom after failure "},{"type":"reference","identifier":"doc:\/\/Networking\/documentation\/Networking\/RetryConfiguration","isActive":true},{"text":", specifying the count of retries, delay and a handler that determines whether the request should be tried again. Otherwise, ","type":"text"},{"identifier":"doc:\/\/Networking\/documentation\/Networking\/RetryConfiguration\/default","isActive":true,"type":"reference"},{"text":" configuration is used.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let retryConfiguration = RetryConfiguration(retries: 2, delay: .constant(1)) { error in ","    \/\/ custom logic here","}","let userResponse: UserResponse = try await apiManager.request(","    UserRouter.getUser,","    retryConfiguration: retryConfiguration",")"]},{"text":"Modifiers","level":2,"type":"heading","anchor":"Modifiers"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Modifiers are useful pieces of code that modify request\/response in the network request pipeline."},{"text":" ","type":"text"},{"type":"image","identifier":"interceptors-diagram.png"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"There are three types you can leverage:"}]},{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/Networking\/documentation\/Networking\/RequestAdapting","isActive":true,"type":"reference"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Adapters are request transformable components that perform operations on the "},{"type":"codeVoice","code":"URLRequest"},{"text":" before it is dispatched. They are used to further customise HTTP requests before they are carried out by editing the ","type":"text"},{"code":"URLRequest","type":"codeVoice"},{"text":" (e.g updating headers).","type":"text"}]},{"inlineContent":[{"identifier":"doc:\/\/Networking\/documentation\/Networking\/ResponseProcessing","type":"reference","isActive":true}],"type":"paragraph"},{"inlineContent":[{"text":"Response processors are handling the ","type":"text"},{"type":"reference","identifier":"doc:\/\/Networking\/documentation\/Networking\/Response","isActive":true},{"text":" received after a successful network request.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/Networking\/documentation\/Networking\/ErrorProcessing","isActive":true}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Error processors are handling the "},{"type":"codeVoice","code":"Error"},{"type":"text","text":" received after a failed network request."}]},{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"doc:\/\/Networking\/documentation\/Networking\/RequestInterceptor","type":"reference"}]},{"inlineContent":[{"text":"Interceptors handle both adapting and response\/error processing.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"By conforming to these protocols, you can create your own adaptors\/processors\/interceptors."}]},{"inlineContent":[{"type":"text","text":"Here is list of classes provided by this library which implement these protocols:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/Networking\/documentation\/Networking\/StatusCodeProcessor","isActive":true}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/Networking\/documentation\/Networking\/EndpointRequestStorageProcessor","type":"reference","isActive":true}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/Networking\/documentation\/Networking\/LoggingInterceptor","type":"reference","isActive":true}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/Networking\/documentation\/Networking\/AuthorizationTokenInterceptor","isActive":true}]}]}]},{"level":2,"type":"heading","anchor":"Request-authorization","text":"Request authorization"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Networking provides a default authorization handling for OAuth scenarios. In order to utilise this we"},{"type":"text","text":" "},{"type":"text","text":"have to first create our own implementation of "},{"identifier":"doc:\/\/Networking\/documentation\/Networking\/AuthorizationStorageManaging","type":"reference","isActive":true},{"text":" and ","type":"text"},{"identifier":"doc:\/\/Networking\/documentation\/Networking\/AuthorizationManaging","isActive":true,"type":"reference"},{"type":"text","text":" which we inject into to  "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Networking\/documentation\/Networking\/AuthorizationTokenInterceptor"},{"type":"text","text":" and then pass it to the "},{"type":"reference","identifier":"doc:\/\/Networking\/documentation\/Networking\/APIManager","isActive":true},{"text":" as both adapter and processor.","type":"text"}]},{"code":["let authManager = AuthorizationManager()","let authorizationInterceptor = AuthorizationTokenInterceptor(authorizationManager: authManager)","let apiManager = APIManager(","            requestAdapters: [authorizationInterceptor],","            responseProcessors: [authorizationInterceptor]","        )"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"After login we have to save the "},{"identifier":"doc:\/\/Networking\/documentation\/Networking\/AuthorizationData","isActive":true,"type":"reference"},{"type":"text","text":" to the "},{"type":"reference","identifier":"doc:\/\/Networking\/documentation\/Networking\/AuthorizationStorageManaging","isActive":true},{"type":"text","text":"."}],"type":"paragraph"},{"syntax":"swift","code":["let response: UserAuthResponse = try await apiManager.request(","    UserRouter.loginUser(request)",")","try await authManager.storage.saveData(response.authData)"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Then we can simply define which request should be authorised via ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Networking\/documentation\/Networking\/Requestable\/isAuthenticationRequired-68jdf"},{"type":"text","text":" property on "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Networking\/documentation\/Networking\/Requestable"},{"type":"text","text":" protocol."}]},{"syntax":"swift","type":"codeListing","code":["extension UserRouter: Requestable {","    ...","    var isAuthenticationRequired: Bool {","        switch self {","        case .getUser, .updateUser:","            return true","        }","    }","}"]},{"level":2,"text":"Associated array query parameters","anchor":"Associated-array-query-parameters","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When specifying urlParameters in the endpoint definition, use an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Networking\/documentation\/Networking\/ArrayParameter"},{"type":"text","text":" to define multiple values for a single URL query parameter. The struct lets you decide which "},{"identifier":"doc:\/\/Networking\/documentation\/Networking\/ArrayEncoding","type":"reference","isActive":true},{"type":"text","text":" will be used during the creation of the URL."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"There are two currently supported encodings:"}]},{"items":[{"content":[{"inlineContent":[{"text":"Comma separated","type":"text"}],"type":"paragraph"}]}],"type":"orderedList"},{"syntax":"swift","type":"codeListing","code":["http:\/\/example.com?filter=1,2,3"]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Individual (default)","type":"text"}]}]}],"start":2,"type":"orderedList"},{"syntax":"swift","code":["http:\/\/example.com?filter=1&filter=2&filter=3"],"type":"codeListing"},{"anchor":"Example","level":3,"type":"heading","text":"Example"},{"type":"codeListing","syntax":"swift","code":["var urlParameters: [String: Any]? { ","     [\"filter\": ArrayParameter([1, 2, 3], arrayEncoding: .individual)]","}"]}],"kind":"content"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"paths":["\/documentation\/networking\/documentation"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"kind":"article","identifier":{"url":"doc:\/\/Networking\/documentation\/Networking\/Documentation","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Article","modules":[{"name":"Networking"}],"title":"Networking","role":"article"},"references":{"doc://Networking/documentation/Networking/DownloadAPIManager":{"navigatorTitle":[{"kind":"identifier","text":"DownloadAPIManager"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"DownloadAPIManager","kind":"identifier"}],"role":"symbol","url":"\/documentation\/networking\/downloadapimanager","abstract":[{"text":"Default download API manager which is responsible for the creation and management of network file downloads.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Networking\/documentation\/Networking\/DownloadAPIManager","title":"DownloadAPIManager"},"doc://Networking/documentation/Networking/RetryConfiguration":{"identifier":"doc:\/\/Networking\/documentation\/Networking\/RetryConfiguration","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"RetryConfiguration","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"RetryConfiguration","kind":"identifier"}],"abstract":[{"text":"Retry of API calls allows various options wrapped into ","type":"text"},{"type":"codeVoice","code":"RetryConfiguration"},{"text":" struct.","type":"text"}],"kind":"symbol","role":"symbol","title":"RetryConfiguration","url":"\/documentation\/networking\/retryconfiguration"},"doc://Networking/documentation/Networking/Requestable":{"abstract":[{"type":"text","text":"A type that represents an API endpoint."}],"type":"topic","identifier":"doc:\/\/Networking\/documentation\/Networking\/Requestable","url":"\/documentation\/networking\/requestable","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Requestable"}],"title":"Requestable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Requestable","kind":"identifier"}],"kind":"symbol"},"#uploading-files":{"type":"link","url":"#uploading-files","titleInlineContent":[{"type":"text","text":"Uploading files"}],"identifier":"#uploading-files","title":"Uploading files"},"doc://Networking/documentation/Networking/ResponseProcessing":{"identifier":"doc:\/\/Networking\/documentation\/Networking\/ResponseProcessing","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ResponseProcessing"}],"type":"topic","navigatorTitle":[{"text":"ResponseProcessing","kind":"identifier"}],"abstract":[{"text":"A type that is able to modify a ","type":"text"},{"type":"reference","identifier":"doc:\/\/Networking\/documentation\/Networking\/Response","isActive":true},{"text":" when itâ€™s received from the network layer.","type":"text"}],"kind":"symbol","role":"symbol","title":"ResponseProcessing","url":"\/documentation\/networking\/responseprocessing"},"#overview":{"type":"link","url":"#overview","titleInlineContent":[{"type":"text","text":"Overview"}],"identifier":"#overview","title":"Overview"},"doc://Networking/documentation/Networking/AuthorizationManaging":{"url":"\/documentation\/networking\/authorizationmanaging","kind":"symbol","navigatorTitle":[{"text":"AuthorizationManaging","kind":"identifier"}],"identifier":"doc:\/\/Networking\/documentation\/Networking\/AuthorizationManaging","abstract":[{"text":"A definition of manager which authorizes requests and manages refresh token mechanism.","type":"text"}],"title":"AuthorizationManaging","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AuthorizationManaging","kind":"identifier"}],"type":"topic","role":"symbol"},"doc://Networking/documentation/Networking":{"type":"topic","title":"Networking","role":"collection","abstract":[],"kind":"symbol","identifier":"doc:\/\/Networking\/documentation\/Networking","url":"\/documentation\/networking"},"doc://Networking/documentation/Networking/EndpointRequestStorageProcessor":{"identifier":"doc:\/\/Networking\/documentation\/Networking\/EndpointRequestStorageProcessor","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EndpointRequestStorageProcessor","kind":"identifier"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"EndpointRequestStorageProcessor"}],"abstract":[{"text":"A response processor which stores all responses & related requests data into files.","type":"text"}],"kind":"symbol","role":"symbol","title":"EndpointRequestStorageProcessor","url":"\/documentation\/networking\/endpointrequeststorageprocessor"},"#request-authorization":{"type":"link","url":"#request-authorization","titleInlineContent":[{"type":"text","text":"Request authorization"}],"identifier":"#request-authorization","title":"Request authorization"},"#downloading-files":{"url":"#downloading-files","titleInlineContent":[{"text":"Downloading files","type":"text"}],"identifier":"#downloading-files","type":"link","title":"Downloading files"},"doc://Networking/documentation/Networking/ArrayEncoding":{"identifier":"doc:\/\/Networking\/documentation\/Networking\/ArrayEncoding","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"ArrayEncoding","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"ArrayEncoding","kind":"identifier"}],"abstract":[{"text":"Associated array parameters query options.","type":"text"}],"kind":"symbol","role":"symbol","title":"ArrayEncoding","url":"\/documentation\/networking\/arrayencoding"},"#making-requests":{"url":"#making-requests","titleInlineContent":[{"type":"text","text":"Making requests"}],"identifier":"#making-requests","title":"Making requests","type":"link"},"doc://Networking/documentation/Networking/AuthorizationData":{"identifier":"doc:\/\/Networking\/documentation\/Networking\/AuthorizationData","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AuthorizationData","kind":"identifier"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"AuthorizationData"}],"abstract":[{"type":"text","text":"A struct which holds all necessary values for OAuth authorization."}],"kind":"symbol","role":"symbol","title":"AuthorizationData","url":"\/documentation\/networking\/authorizationdata"},"interceptors-diagram.png":{"variants":[{"url":"\/images\/interceptors-diagram.png","traits":["1x","light"]}],"alt":"Interceptors diagram","identifier":"interceptors-diagram.png","type":"image"},"doc://Networking/documentation/Networking/RequestInterceptor":{"identifier":"doc:\/\/Networking\/documentation\/Networking\/RequestInterceptor","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"RequestInterceptor","kind":"identifier"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"RequestInterceptor"}],"abstract":[{"type":"text","text":"A modifier which adapts a request and also processes a response."}],"kind":"symbol","role":"symbol","title":"RequestInterceptor","url":"\/documentation\/networking\/requestinterceptor"},"doc://Networking/documentation/Networking/AuthorizationStorageManaging":{"identifier":"doc:\/\/Networking\/documentation\/Networking\/AuthorizationStorageManaging","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AuthorizationStorageManaging","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"AuthorizationStorageManaging","kind":"identifier"}],"abstract":[{"type":"text","text":"A definition of a manager which handles operations related to storing "},{"identifier":"doc:\/\/Networking\/documentation\/Networking\/AuthorizationData","isActive":true,"type":"reference"},{"text":" for example in a KeyChain.","type":"text"}],"kind":"symbol","role":"symbol","title":"AuthorizationStorageManaging","url":"\/documentation\/networking\/authorizationstoragemanaging"},"doc://Networking/documentation/Networking/RetryConfiguration/default":{"identifier":"doc:\/\/Networking\/documentation\/Networking\/RetryConfiguration\/default","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`default`","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Networking18RetryConfigurationV","text":"RetryConfiguration","kind":"typeIdentifier"}],"type":"topic","abstract":[],"kind":"symbol","role":"symbol","title":"default","url":"\/documentation\/networking\/retryconfiguration\/default"},"doc://Networking/documentation/Networking/Requestable/isAuthenticationRequired-68jdf":{"identifier":"doc:\/\/Networking\/documentation\/Networking\/Requestable\/isAuthenticationRequired-68jdf","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"isAuthenticationRequired","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"type":"topic","defaultImplementations":1,"abstract":[{"type":"text","text":"A Boolean flag indicating whether the request to the endpoint requires any type of authentication."}],"kind":"symbol","required":true,"role":"symbol","title":"isAuthenticationRequired","url":"\/documentation\/networking\/requestable\/isauthenticationrequired-68jdf"},"doc://Networking/documentation/Networking/ErrorProcessing":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ErrorProcessing","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ErrorProcessing"}],"kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"A type that is able to customize error returned after failed network request.","type":"text"}],"identifier":"doc:\/\/Networking\/documentation\/Networking\/ErrorProcessing","url":"\/documentation\/networking\/errorprocessing","title":"ErrorProcessing"},"doc://Networking/documentation/Networking/RequestAdapting":{"identifier":"doc:\/\/Networking\/documentation\/Networking\/RequestAdapting","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"RequestAdapting","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"RequestAdapting","kind":"identifier"}],"abstract":[{"type":"text","text":"A type that is able to modify a request before sending it to an API."}],"kind":"symbol","role":"symbol","title":"RequestAdapting","url":"\/documentation\/networking\/requestadapting"},"doc://Networking/documentation/Networking/UploadTask":{"identifier":"doc:\/\/Networking\/documentation\/Networking\/UploadTask","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UploadTask","kind":"identifier"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"UploadTask"}],"abstract":[{"type":"text","text":"Represents and manages an upload task and provides its state."}],"kind":"symbol","role":"symbol","title":"UploadTask","url":"\/documentation\/networking\/uploadtask"},"doc://Networking/documentation/Networking/UploadAPIManager":{"identifier":"doc:\/\/Networking\/documentation\/Networking\/UploadAPIManager","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"UploadAPIManager","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"UploadAPIManager","kind":"identifier"}],"abstract":[{"type":"text","text":"Default upload API manager which is responsible for the creation and management of network file uploads."}],"kind":"symbol","role":"symbol","title":"UploadAPIManager","url":"\/documentation\/networking\/uploadapimanager"},"#associated-array-query-parameters":{"url":"#associated-array-query-parameters","titleInlineContent":[{"text":"Associated array query parameters","type":"text"}],"identifier":"#associated-array-query-parameters","type":"link","title":"Associated array query parameters"},"doc://Networking/documentation/Networking/LoggingInterceptor":{"identifier":"doc:\/\/Networking\/documentation\/Networking\/LoggingInterceptor","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"LoggingInterceptor","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"LoggingInterceptor","kind":"identifier"}],"abstract":[{"text":"A default ","type":"text"},{"type":"reference","identifier":"doc:\/\/Networking\/documentation\/Networking\/LoggingInterceptor","isActive":true},{"text":" which internally uses ","type":"text"},{"type":"codeVoice","code":"os_log"},{"text":" to pretty print requests\/responses. You can utilise it to get logging console output either for requests, responses or both.","type":"text"}],"kind":"symbol","role":"symbol","title":"LoggingInterceptor","url":"\/documentation\/networking\/logginginterceptor"},"doc://Networking/documentation/Networking/AuthorizationTokenInterceptor":{"identifier":"doc:\/\/Networking\/documentation\/Networking\/AuthorizationTokenInterceptor","title":"AuthorizationTokenInterceptor","role":"symbol","type":"topic","kind":"symbol","abstract":[{"text":"An interceptor which handles the authorisation process of requests.","type":"text"}],"url":"\/documentation\/networking\/authorizationtokeninterceptor","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AuthorizationTokenInterceptor","kind":"identifier"}],"navigatorTitle":[{"text":"AuthorizationTokenInterceptor","kind":"identifier"}]},"doc://Networking/documentation/Networking/ArrayParameter":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ArrayParameter"}],"identifier":"doc:\/\/Networking\/documentation\/Networking\/ArrayParameter","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ArrayParameter","kind":"identifier"}],"url":"\/documentation\/networking\/arrayparameter","abstract":[{"text":"Array parameter type for associated values with array encoding option.","type":"text"}],"type":"topic","title":"ArrayParameter"},"doc://Networking/documentation/Networking/Response":{"navigatorTitle":[{"text":"Response","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"Response","kind":"identifier"}],"type":"topic","abstract":[{"text":"A default ","type":"text"},{"type":"codeVoice","code":"URLSession"},{"type":"text","text":" response tuple."}],"identifier":"doc:\/\/Networking\/documentation\/Networking\/Response","url":"\/documentation\/networking\/response","kind":"symbol","title":"Response","role":"symbol"},"#retry-ability":{"title":"Retry-ability","type":"link","identifier":"#retry-ability","url":"#retry-ability","titleInlineContent":[{"type":"text","text":"Retry-ability"}]},"doc://Networking/documentation/Networking/StatusCodeProcessor":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"StatusCodeProcessor"}],"identifier":"doc:\/\/Networking\/documentation\/Networking\/StatusCodeProcessor","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StatusCodeProcessor","kind":"identifier"}],"url":"\/documentation\/networking\/statuscodeprocessor","abstract":[{"type":"text","text":"A response processor validating "},{"isActive":true,"identifier":"doc:\/\/Networking\/documentation\/Networking\/Response","type":"reference"},{"text":" http status code against ","type":"text"},{"type":"reference","identifier":"doc:\/\/Networking\/documentation\/Networking\/Requestable","isActive":true},{"text":" API endpoint definition.","type":"text"}],"type":"topic","title":"StatusCodeProcessor"},"doc://Networking/documentation/Networking/APIManager":{"role":"symbol","navigatorTitle":[{"text":"APIManager","kind":"identifier"}],"identifier":"doc:\/\/Networking\/documentation\/Networking\/APIManager","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"APIManager","kind":"identifier"}],"url":"\/documentation\/networking\/apimanager","abstract":[{"text":"Default API manager which is responsible for the creation and management of network requests.","type":"text"}],"title":"APIManager","type":"topic"},"#modifiers":{"type":"link","url":"#modifiers","titleInlineContent":[{"text":"Modifiers","type":"text"}],"identifier":"#modifiers","title":"Modifiers"}}}