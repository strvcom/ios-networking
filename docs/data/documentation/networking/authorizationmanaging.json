{"metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AuthorizationManaging","kind":"identifier"}],"role":"symbol","symbolKind":"protocol","navigatorTitle":[{"kind":"identifier","text":"AuthorizationManaging"}],"title":"AuthorizationManaging","externalID":"s:10Networking21AuthorizationManagingP","roleHeading":"Protocol","modules":[{"name":"Networking"}]},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/Networking\/documentation\/Networking\/AuthorizationManaging\/storage"]},{"title":"Instance Methods","identifiers":["doc:\/\/Networking\/documentation\/Networking\/AuthorizationManaging\/authorizeRequest(_:)-6azlk","doc:\/\/Networking\/documentation\/Networking\/AuthorizationManaging\/getValidAccessToken()-5hypz","doc:\/\/Networking\/documentation\/Networking\/AuthorizationManaging\/refreshAuthorizationData()","doc:\/\/Networking\/documentation\/Networking\/AuthorizationManaging\/refreshAuthorizationData(with:)"]}],"hierarchy":{"paths":[["doc:\/\/Networking\/documentation\/Networking"]]},"identifier":{"url":"doc:\/\/Networking\/documentation\/Networking\/AuthorizationManaging","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AuthorizationManaging"}]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"text":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This manager requires you to provide a storage defined by ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Networking\/documentation\/Networking\/AuthorizationStorageManaging"},{"type":"text","text":" (where OAuth credentials will be stored) and a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Networking\/documentation\/Networking\/AuthorizationManaging\/refreshAuthorizationData(with:)"},{"text":" method that will perform the refresh token network call to obtain a new OAuth pair. This should be handled on a separate ","type":"text"},{"identifier":"doc:\/\/Networking\/documentation\/Networking\/APIManager","isActive":true,"type":"reference"},{"type":"text","text":" instance which doesnâ€™t inject "},{"type":"reference","identifier":"doc:\/\/Networking\/documentation\/Networking\/AuthorizationTokenInterceptor","isActive":true},{"type":"text","text":" in order to avoid a dead loop."}]},{"type":"paragraph","inlineContent":[{"text":"Optionally, you can provide custom implementations for ","type":"text"},{"identifier":"doc:\/\/Networking\/documentation\/Networking\/AuthorizationManaging\/authorizeRequest(_:)-6azlk","type":"reference","isActive":true},{"type":"text","text":" (by default, this method sets the authorization header) or "},{"type":"reference","identifier":"doc:\/\/Networking\/documentation\/Networking\/AuthorizationManaging\/getValidAccessToken()-5hypz","isActive":true},{"text":" (by default, this method returns the access token saved in provided storage).","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Example implementation:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["final class AuthorizationManager: AuthorizationManaging {","    let storage: AuthorizationStorageManaging = AuthorizationStorageManager()","","    private let apiManager: APIManager = APIManager()","","    func refreshAuthorizationData(with refreshToken: String) async throws -> Networking.AuthorizationData {","        let request = RefreshTokenRequest(refreshToken: refreshToken)","        let response: AuthResponse = try await apiManager.request(","            AuthRouter.refreshToken(request)","        )","        return response.authData","    }","}"]}]}],"abstract":[{"type":"text","text":"A definition of manager which authorizes requests and manages refresh token mechanism."}],"variants":[{"paths":["\/documentation\/networking\/authorizationmanaging"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://Networking/documentation/Networking":{"type":"topic","title":"Networking","role":"collection","abstract":[],"kind":"symbol","identifier":"doc:\/\/Networking\/documentation\/Networking","url":"\/documentation\/networking"},"doc://Networking/documentation/Networking/AuthorizationManaging/refreshAuthorizationData(with:)":{"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/Networking\/documentation\/Networking\/AuthorizationManaging\/refreshAuthorizationData(with:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"refreshAuthorizationData"},{"kind":"text","text":"("},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Networking17AuthorizationDataV","text":"AuthorizationData"}],"url":"\/documentation\/networking\/authorizationmanaging\/refreshauthorizationdata(with:)","title":"refreshAuthorizationData(with:)","abstract":[],"required":true},"doc://Networking/documentation/Networking/AuthorizationManaging":{"url":"\/documentation\/networking\/authorizationmanaging","kind":"symbol","navigatorTitle":[{"text":"AuthorizationManaging","kind":"identifier"}],"identifier":"doc:\/\/Networking\/documentation\/Networking\/AuthorizationManaging","abstract":[{"text":"A definition of manager which authorizes requests and manages refresh token mechanism.","type":"text"}],"title":"AuthorizationManaging","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AuthorizationManaging","kind":"identifier"}],"type":"topic","role":"symbol"},"doc://Networking/documentation/Networking/AuthorizationStorageManaging":{"identifier":"doc:\/\/Networking\/documentation\/Networking\/AuthorizationStorageManaging","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AuthorizationStorageManaging","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"AuthorizationStorageManaging","kind":"identifier"}],"abstract":[{"type":"text","text":"A definition of a manager which handles operations related to storing "},{"identifier":"doc:\/\/Networking\/documentation\/Networking\/AuthorizationData","isActive":true,"type":"reference"},{"text":" for example in a KeyChain.","type":"text"}],"kind":"symbol","role":"symbol","title":"AuthorizationStorageManaging","url":"\/documentation\/networking\/authorizationstoragemanaging"},"doc://Networking/documentation/Networking/AuthorizationManaging/storage":{"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/Networking\/documentation\/Networking\/AuthorizationManaging\/storage","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"storage","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Networking28AuthorizationStorageManagingP","text":"AuthorizationStorageManaging"}],"url":"\/documentation\/networking\/authorizationmanaging\/storage","title":"storage","abstract":[],"required":true},"doc://Networking/documentation/Networking/AuthorizationData":{"identifier":"doc:\/\/Networking\/documentation\/Networking\/AuthorizationData","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AuthorizationData","kind":"identifier"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"AuthorizationData"}],"abstract":[{"type":"text","text":"A struct which holds all necessary values for OAuth authorization."}],"kind":"symbol","role":"symbol","title":"AuthorizationData","url":"\/documentation\/networking\/authorizationdata"},"doc://Networking/documentation/Networking/AuthorizationTokenInterceptor":{"identifier":"doc:\/\/Networking\/documentation\/Networking\/AuthorizationTokenInterceptor","title":"AuthorizationTokenInterceptor","role":"symbol","type":"topic","kind":"symbol","abstract":[{"text":"An interceptor which handles the authorisation process of requests.","type":"text"}],"url":"\/documentation\/networking\/authorizationtokeninterceptor","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AuthorizationTokenInterceptor","kind":"identifier"}],"navigatorTitle":[{"text":"AuthorizationTokenInterceptor","kind":"identifier"}]},"doc://Networking/documentation/Networking/AuthorizationManaging/getValidAccessToken()-5hypz":{"url":"\/documentation\/networking\/authorizationmanaging\/getvalidaccesstoken()-5hypz","role":"symbol","abstract":[],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getValidAccessToken","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"title":"getValidAccessToken()","defaultImplementations":1,"type":"topic","required":true,"identifier":"doc:\/\/Networking\/documentation\/Networking\/AuthorizationManaging\/getValidAccessToken()-5hypz"},"doc://Networking/documentation/Networking/AuthorizationManaging/authorizeRequest(_:)-6azlk":{"url":"\/documentation\/networking\/authorizationmanaging\/authorizerequest(_:)-6azlk","defaultImplementations":1,"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"authorizeRequest","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"URLRequest","preciseIdentifier":"s:10Foundation10URLRequestV"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"URLRequest","preciseIdentifier":"s:10Foundation10URLRequestV","kind":"typeIdentifier"}],"kind":"symbol","title":"authorizeRequest(_:)","role":"symbol","abstract":[],"required":true,"identifier":"doc:\/\/Networking\/documentation\/Networking\/AuthorizationManaging\/authorizeRequest(_:)-6azlk"},"doc://Networking/documentation/Networking/AuthorizationManaging/refreshAuthorizationData()":{"type":"topic","title":"refreshAuthorizationData()","abstract":[],"identifier":"doc:\/\/Networking\/documentation\/Networking\/AuthorizationManaging\/refreshAuthorizationData()","role":"symbol","url":"\/documentation\/networking\/authorizationmanaging\/refreshauthorizationdata()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"refreshAuthorizationData","kind":"identifier"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"}],"kind":"symbol"},"doc://Networking/documentation/Networking/APIManager":{"role":"symbol","navigatorTitle":[{"text":"APIManager","kind":"identifier"}],"identifier":"doc:\/\/Networking\/documentation\/Networking\/APIManager","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"APIManager","kind":"identifier"}],"url":"\/documentation\/networking\/apimanager","abstract":[{"text":"Default API manager which is responsible for the creation and management of network requests.","type":"text"}],"title":"APIManager","type":"topic"}}}