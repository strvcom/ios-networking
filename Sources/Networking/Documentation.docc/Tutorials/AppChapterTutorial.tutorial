@Tutorial(time: 10) {
    @Intro(title: "Implement Networking library to your application") {
        ``Networking`` is library inspired by [Moya](https://github.com/Moya/Moya) and [Alamofire](https://github.com/Alamofire/Alamofire). Comparing to the frameworks mentioned before Networking covers just most common REST API networking cases and provides additional features to help developers with writing UI tests or debugging issues.
        
        @Image(source: XcodeScreenshot1.png, alt: "Networking random description")
    }
    
    @Section(title: " Creating endpoints") {
        @ContentAndMedia {
            Firstly, application uses ``Requestable`` protocol for defining endpoints. These can be then easily specified in Business Logic (mostly Services) for more readable network requests.
            
            @Image(source: <#file#>, alt: "<#accessible description#>")
        }
        
        @Steps {
            @Step {
                Create a new swift file named `ExampleRouter.swift`
                @Code(name: "ExampleRouter.swift", file: Router00.swift)
            }
            @Step {
                Import the `Networking` package.
                @Code(name: "ExampleRouter.swift", file: Router01.swift)
            }
            @Step {
                Create enum `ExampleRouter`. It must implements ``Requestable`` protocol.
                @Code(name: "ExampleRouter.swift", file: Router02.swift)
            }
            @Step {
                Add endpoints to router, each case represents one endpoint.
                @Code(name: "ExampleRouter.swift", file: Router03.swift)
            }
            @Step {
                Implement required attributes for ``Requestable`` protocol. First is `baseURL` which represents host URL of REST API
                @Code(name: "ExampleRouter.swift", file: Router04.swift)
            }
            @Step {
                Implement path for `URLRequest`.
                @Code(name: "ExampleRouter.swift", file: Router05.swift)
            }
            @Step {
                Implement `urlParameters` if `URLRequest` needs them.
                @Code(name: "ExampleRouter.swift", file: Router06.swift)
            }
            @Step {
                Implement `headers` if `URLRequest` needs them.
                @Code(name: "ExampleRouter.swift", file: Router07.swift)
            }
            @Step {
                Select ``HTTPMethod`` for `URLRequest`.
                @Code(name: "ExampleRouter.swift", file: Router08.swift)
            }
            @Step {
                Select ``RequestDataType`` if neccessary.
                @Code(name: "ExampleRouter.swift", file: Router09.swift)
            }
            @Step {
                Select if `URLRequest` needs to be authenticated
                @Code(name: "ExampleRouter.swift", file: Router10.swift)
            }
        }
    }

    @Section(title: "Calling endpoints") {
        
        @ContentAndMedia {
            After creating endpoints, we can easily create class for business logic (mostly Services) for requesting data from endpoints.
            
            @Image(source: PhoneCommunication.png, alt: "")
        }
        @Steps {
            @Step {
                
            }
        }
    }
}
